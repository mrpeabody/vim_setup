
snippet cev
console.error('$1: ', ${1:err});
endsnippet


snippet clv
console.log('$1: ', ${1});
endsnippet

############
# PROMISES #
############

############
# PROMISES #
############

snippet then "then" i
then(function($1) {
  $2
})
endsnippet

snippet then( "then" i
then(function($1) {
  $2
})
endsnippet

snippet then(f "then" i
then(function($1) {
  $2
})
endsnippet

snippet }).t "then" i
}).then(function($1) {
  $2
})
endsnippet

snippet })t "then" i
}).then(function($1) {
  $2
})
endsnippet

snippet catch "catch" i
catch(function(err) {
  $1
})
endsnippet

snippet catch( "catch" i
catch(function(err) {
  $1
})
endsnippet

snippet }).c "catch" i
}).catch(function(err) {
  $1
})
endsnippet

snippet })c "then" i
}).catch(function(err) {
  $1
})
endsnippet


#########
# REACT #
#########

snippet rpta
$1: React.PropTypes.array,
endsnippet

snippet rptb
$1: React.PropTypes.bool,
endsnippet

snippet rptf
$1: React.PropTypes.func,
endsnippet

snippet rptn
$1: React.PropTypes.number,
endsnippet

snippet rpto
$1: React.PropTypes.object,
endsnippet

snippet rpts
$1: React.PropTypes.string,
endsnippet

snippet component
class $1 extends React.Component {
  static propTypes = {
  }

  render() {
    return (
      <div></div>
    )
  }
}
endsnippet

snippet edcomp
import React from 'react'

export default class $1 extends React.Component {
  static propTypes = {
  }

  render() {
    return (
      <div>$1</div>
    )
  }
}
endsnippet

snippet edview
import React from 'react'
import { connect } from 'react-redux'

class $1 extends React.Component {
  static propTypes = {
  }

  render() {
    return (
      <div>$1</div>
    )
  }
}

const mapStateToProps = state => ({
})

const mapDispatchToProps = {
}

export default connect(mapStateToProps, mapDispatchToProps)($1)
endsnippet

###########
# IMPORTS #
###########

snippet implo
import _ from 'lodash'
endsnippet

snippet impreact
import React from 'react'

endsnippet
